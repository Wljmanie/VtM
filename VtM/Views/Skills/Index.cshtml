@using VtM.Enums
@model IEnumerable<VtM.Models.Skill>

@{
    ViewData["Title"] = "Skills";
}

<h1>Skills</h1>

<p>
    @if (User.IsInRole(Roles.Admin.ToString()) || User.IsInRole(Roles.StoryTeller.ToString()))
    {
        <a asp-action="Create">Create New</a>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SkillName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SkillType)
            </th>
            
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.SkillName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SkillType)
            </td>
            
            <td>
                @if (User.IsInRole(Roles.Admin.ToString()) || User.IsInRole(Roles.StoryTeller.ToString()))
                {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a><text> | </text>
                }
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
                @if (User.IsInRole(Roles.Admin.ToString()) || User.IsInRole(Roles.StoryTeller.ToString()))
                {
                <text> | </text><a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
